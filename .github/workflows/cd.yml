name: CD - Docker Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout del código
        uses: actions/checkout@v4

      - name: ☕ Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: 🛠️ Build del proyecto
        run: mvn clean package -DskipTests
        working-directory: ./pqrs  # ✅ clave

      - name: 🐳 Build imagen Docker
        run: docker build -t pqrs-app .
        working-directory: ./pqrs  # ✅ donde está el Dockerfile

      - name: 🔐 Login al servidor remoto por SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker stop pqrs-app || true
            docker rm pqrs-app || true
            docker rmi pqrs-app || true

      - name: 📦 Exportar imagen Docker como tar
        run: docker save pqrs-app > pqrs-app.tar

      - name: 📤 Enviar imagen al servidor
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "pqrs-app.tar"
          target: "/home/${{ secrets.SSH_USER }}/"

      - name: 🚀 Importar y ejecutar imagen en servidor
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker load < /home/${{ secrets.SSH_USER }}/pqrs-app.tar
            docker run -d --name pqrs-app -p 8080:8080 pqrs-app
